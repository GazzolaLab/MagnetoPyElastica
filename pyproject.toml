# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "MagnetoPyElastica"
version = "0.0.1"
description = "Python software for simulating magnetic Cosserat rods."
#readme = "README.md"
authors = ["Arman Tekinalp <armant2@illinois.edu>, Yashraj Bhosale <bhosale2@illinois.edu>"]
license = "MIT"
repository = "https://github.com/armantekinalp/MagnetoPyElastica"
#homepage = "https://mindinvitro.illinois.edu"
#documentation = "https://miv-os.readthedocs.io"
#keywords = []

# ...
packages = [
    { include = "magneto_pyelastica" }
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
pyelastica = "^0.2"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = {extras = ["colors"], version = "^5.10.1"}
#mypy = "^0.950"
#mypy-extensions = "^0.4.3"
#pre-commit = "^2.19.0"
#pydocstyle = "^6.1.1"
#pylint = "^2.13.9"
pytest = "^7.1.2"
#pyupgrade = "^2.32.1"
coverage = "^6.3.3"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
flake8 = "^4.0.1"

[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''


[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 88
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "ELLIPSIS"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
#  "--doctest-modules", TODO: Try to include pytest.doctest
#  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "magneto_pyelastica"

[coverage.run]
branch = true

[coverage.report]
show_missing = true